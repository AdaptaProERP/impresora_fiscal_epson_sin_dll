// Programa   : EPSONPF-IF
// Fecha/Hora : 05/03/2009 
// Propósito  : VERIFICA EL ESTADO OPERATIVO DE LAS IMPRESORA EPSON FISCALES
// Aplicación : APLICACION INDEPENDIENTE PARA CONSULTA
// Tipo       : 
// Creado Por : LARRY BORGES - TECNODATOS
// Observación: USA COMUNICACION DIRECTA SISTEMA - ADAPTAPRO - EN MENU OTROS 

#include "dpxbase.ch"


PROCEDURE MAIN()

  Local cCom:="COM1:", nBaudeRate:=9600, ndatabits:=8, cparity:="E", nstopbit:=1, nCharSec:=0
  Local cRead:=SPACE(4000), cBuffer   :=SPACE(65536),i,nBytes, lSeguir:=.T.
  LOCAL lOk,eCAM1,eCAM2,eCAM3,eCAM4, cComando, cCampo1,cCampo2, cData
  LOCAL STX, ETX, DC2, DC4, NAK, SEC, SEP, CNU, nCarBuff, cComent:="Cargando..."
  LOCAL POSSEP,TECLA,CHARSEC,xCONT,ENVIO,xTIEMPO,xINISEC, cCampo1
  LOCAL CAM1:="", CAM2:="", CAM3:="", CAM4:="", CAM5:="", CAM6:="", CAM7:=""
  LOCAL CAM8:="", CAM9:="", CAM10:="", CAM11:="", CAM12:="", cError:="Sin Errores Operativos/Revisar Programa"
  LOCAL EDO1:="", EDO2:="", EDO3:="", EDO4:="", cErrorNum:="",nError:=0
  LOCAL cUltRepZ:="", cUltFac:="",cUltNoFis:="", cUltDev:="", cDFAcumZ:="", cDNFAcumZ:="", cFecha, cHora
  LOCAL cPaquete:=""

  Local cTitle:=oDp:cImpFiscal, aX:=GetCoors( GetDesktopWindow() )
  Local oFont,oFont2
  Local oDlg,oFontB,oFont,oFontO,oFontp

oDp:cImpFiscal:="EPSON"

  IF !("EPSON"$UPPE(oDp:cImpFiscal))
     MensajeErr("Verifique que la Impresora Fiscal Configurada es 'EPSON'")
     RETURN .F.
  ENDIF

  STX      := CHR(02)  // 0x02 = STX  CARACTER DE INICIO DE DATOS
  ETX      := CHR(03)  // 0x03 = ETX  CARACTER DE FIN DE DATOS
  SEP      := CHR(28)  // 0x1C = ?  
  NAK  := CHR(21)  // 0x15 = NAK  respuesta a (enviar a ) la impresora si no proceso el comando 
  DC2  := CHR(18)  // 0x12 = DC2  Indicacion de esperar 
  DC4  := CHR(20)  // 0x14 = DC4  Indicacion de esperar
  CNU  := CHR(127) //      = ¦  CAMPO NO UTILIZADO
  SEC      := " "

  cData:=""

  DEFINE FONT oFont NAME "Verdana"  SIZE 0,-12 BOLD
  DEFINE FONT oFont2 NAME "Verdana"  SIZE 0,-14 BOLD

  DEFINE DIALOG oDlg TITLE cTitle  SIZE 230,60 COLOR NIL,oDp:nGris
 
  oDp:cDescri:=cComent
  oDlg:lHelpIcon:=.F.

  @ 02,5 SAY "CONSULTADO IMPRESORA" FONT oFont2  COLOR NIL,oDp:nGris PIXEL
  @ 15,2 SAY oDp:cDescri PROMPT "Estado: " FONT oFont SIZE 120,80 COLOR NIL,oDp:nGris PIXEL

  ACTIVATE DIALOG oDlg CENTERED;
    ON INIT (oDlg:Show(),SysWait(),Procesa()) 

 Return NIL
//********************************
//
Function PROCESA()
LOCAL cCom:="COM1:", nBaudeRate:=9600, ndatabits:=8, cparity:="E", nstopbit:=1
LOCAL cRead:=SPACE(4000), cBuffer   :=SPACE(65536)

 
  IF !IsWorking()

    IF !Init_Port( cCom, nBaudeRate , nDatabits , cParity , nStopbit , cBuffer  )
       MSGALERT("No pudo abrir "+cCom)
       lSeguir:=.F.
       RETURN .F.
    ENDIF
    OutBufClr()                  // Limpia el Buffer de Salida
    IF !IsWorking()
      MSGALERT("Conexión con Impresora no fue Posible, Puerto Desconectado!")
      UnInt_Port() // Cerrar
      lSeguir:=.F.
      RETURN .F.
    ENDIF
  ENDIF
  lSeguir:=.T.
  oDp:cDescri:SetText("Puerto Abierto.", .T.)

  cComando   := CHR(56)  // 0x38 = 8   // Comando IF 
  CAM1       := CHR(78)  // CHR(78)= N      // Estatus para obtener Nº de Ultima Factura (Las AF no tienen contador de devolucion)
 
  EJECUTAR("EPSONPF-SEC")  // ACTUALIZA EL VALOR DE oDp:nEpsonSec

  IF VALTYPE(oDp:nEpsonSec) != "N"
    MensajeErr("Control de Secuencia de Impresora Fiscal no Habilitado")
    RETURN .F.
  ENDIF
  nCharSec   := oDp:nEpsonSec
  SEC        := CHR(nCharSec)    //  oDp:nEpsonSec
  cPaquete   := STX + SEC + cComando+ SEP + CAM1 + ETX 
  
  lSalir:= ENVIARPF()
  ANALIZA()

  IF !lSalir .AND. ("PF" $ oDp:cImpFiscal )
     oDp:cDescri:SetText("Campos Adicionales...", .T.)
     CAM1     := CHR(84)  // CHR(84)= T  // Estatus para obtener Nº de ultima Devolucion (Solo serie PF)
     EJECUTAR("EPSONPF-SEC")  // ACTUALIZA EL VALOR DE oDp:nEpsonSec
     nCharSec   := oDp:nEpsonSec
     SEC        := CHR(nCharSec)    //  oDp:nEpsonSec
     cPaquete   := STX + SEC + cComando+ SEP + CAM1 + ETX 
     lSalir:= ENVIARPF()
     ANALIZA2()

  ENDIF
  UNINT_PORT()  // CERRAR EL PUERTO
  SYSWAIT(0.5)

  oDlg:End()

  IF !("ERROR" $ cData) .AND. !lSalir
    SHOW_EDO()
   ELSE 
     SHOW_ERR()
  ENDIF

RETURN 



//***********************************

Function Analiza()
  Local cRecibe

  cRECIBE:=cDATA
  IF !("ERROR" $ cData)

    POSSEP:=AT(SEP,cDATA)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM1  :=LEFT(cDATA,POSSEP-1)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM2  :=LEFT(cDATA,POSSEP-1)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM3  :=LEFT(cDATA,POSSEP-1)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM4  :=LEFT(cDATA,POSSEP-1)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM5  :=LEFT(cDATA,POSSEP-1)
  
    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM6  :=LEFT(cDATA,POSSEP-1)
    cFECHA:=RIGHT(CAM6,2)+"/"+SUBSTR(CAM6,3,2)+"/"+LEFT(CAM6,2)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM7  :=LEFT(cDATA,POSSEP-1)
    cHORA :=LEFT(CAM7,2)+":"+SUBSTR(CAM7,3,2)+":"+RIGHT(CAM7,2)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM8  :=LEFT(cDATA,POSSEP-1)
    cDFAcumZ:=CAM8
  
    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM9  :=LEFT(cDATA,POSSEP-1)
    cDNFAcumZ:=CAM9
 
    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM10 :=LEFT(cDATA,POSSEP-1)
    cUltFac := CAM10
 
    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM11 :=LEFT(cDATA,POSSEP-1)
    cUltNoFis:=CAM11
  
    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(ETX,cDATA)   // EL ULTIMO TERMINA CON ETX 
    CAM12 :=LEFT(cDATA,POSSEP-1)
    cUltRepZ:=CAM12

    IF CAM4="00"
      EDO4:="Impresora Libre y Lista"
    ENDIF
    IF CAM4="01"
      EDO4:="Comprobante Fiscal en Curso"
    ENDIF 
    IF CAM4="02"
      EDO4:="Documento No Fiscal en Curso"
    ENDIF
    IF CAM4="04"
      EDO4:="No Lista, Emitir Reporte Z"
    ENDIF
    IF CAM4="05"
      EDO4:="Encabezado de Documento Fiscal impreso"
    ENDIF
    IF CAM4="08"
      EDO4:="Cierre Z no Culminó. Aplicar Reset Impresora"
    ENDIF
    IF CAM4="10" .OR. CAM4="11" .OR. CAM4="12" .OR. CAM4="13" 
      EDO4:="Error Crítico. Llame a Servicio Técnico ("+cam4+")"
    ENDIF
    IF CAM4="14"
      EDO4:="Memoria Fiscal Agotada. Llame a Servicio Técnico"
    ENDIF
  ELSE
    POSSEP:=AT(SEP,cDATA)

    cDATA:=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM1:=LEFT(cDATA,POSSEP-1)
    //
    cDATA:=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM2:=LEFT(cDATA,POSSEP-1)
    //
    cDATA:=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM3:=LEFT(cDATA,POSSEP-1)  // Numero de error
    cErrorNum:=CAM3
    nErrorNum:=VAL(cErrorNum)
    cError:=Ejecutar("EPSONPF-STAT",CAM1,nErrorNum)
    //
    cDATA:=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(ETX,cDATA)   // EL ULTIMO TERMINA CON ETX 
    CAM4:=LEFT(cDATA,POSSEP-1)
    EDO4:=CAM4+" VERIFICAR MAPA DE ERRORES"   // CAMPO CON PALABRA ERROR+NUMERO
    //
  ENDIF
  cData:=cRecibe
RETURN nil

//***********************************
// PARA OBTENER CONTADOR DE NOTAS DE CREDITO

Function Analiza2()
  Local cRecibe

  cRECIBE:=cDATA
  IF !("ERROR" $ cData)

    POSSEP:=AT(SEP,cDATA)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM1  :=LEFT(cDATA,POSSEP-1)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM2  :=LEFT(cDATA,POSSEP-1)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM3  :=LEFT(cDATA,POSSEP-1)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM4  :=LEFT(cDATA,POSSEP-1)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM5  :=LEFT(cDATA,POSSEP-1)
  
    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM6  :=LEFT(cDATA,POSSEP-1)
    cFECHA:=RIGHT(CAM6,2)+"/"+SUBSTR(CAM6,3,2)+"/"+LEFT(CAM6,2)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM7  :=LEFT(cDATA,POSSEP-1)
    cHORA :=LEFT(CAM7,2)+":"+SUBSTR(CAM7,3,2)+":"+RIGHT(CAM7,2)

    cDATA :=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(ETX,cDATA)   // EL ULTIMO TERMINA CON ETX 
    CAM8 :=LEFT(cDATA,POSSEP-1)
    cUltDev := CAM8

  ELSE
    POSSEP:=AT(SEP,cDATA)

    cDATA:=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM1:=LEFT(cDATA,POSSEP-1)
    //
    cDATA:=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM2:=LEFT(cDATA,POSSEP-1)
    //
    cDATA:=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(SEP,cDATA)
    CAM3:=LEFT(cDATA,POSSEP-1)  // Numero de error
    cErrorNum:=CAM3
    nErrorNum:=VAL(cErrorNum)
    cError:=Ejecutar("EPSONPF-STAT",CAM1,nErrorNum)
    //
    cDATA:=SUBSTR(cDATA,POSSEP+1)
    POSSEP:=AT(ETX,cDATA)   // EL ULTIMO TERMINA CON ETX 
    CAM4:=LEFT(cDATA,POSSEP-1)
    EDO4:=CAM4+" VERIFICAR MAPA DE ERRORES"   // CAMPO CON PALABRA ERROR+NUMERO
    //
  ENDIF
  cData:=cRecibe
RETURN nil

 
//*****************************************

FUNCTION SHOW_EDO()
  LOCAL oDlg,oFont,oFontB,oGroup
  

  DEFINE FONT oFont  NAME "Arial"   SIZE 0,-12
  DEFINE FONT oFontB NAME "Arial"   SIZE 0,-14 BOLD 


  DEFINE DIALOG oDlg TITLE "Estatus de Impresora Fiscal "+oDp:cImpFiscal;
         FROM 0,0 TO 25,100;
         COLOR NIL,oDp:nGris

  oDlg:lHelpIcon:=.F.

@ 1,3 GROUP oGrupo TO 5, 53 PROMPT "Datos de la Maquina Fiscal "+oDp:cImpFiscal  FONT oFontB

@ 1.5,5 SAY "Estado Actual"+space(8)+":  "+alltrim(EDO4);
          FONT oFontB;
          COLOR NIL,oDp:nGris

@ 2.5,5 SAY "Ultimo Reporte Z"+space(3)+":  "+alltrim(cUltRepZ);
          FONT oFontB;
          COLOR NIL,oDp:nGris

@ 3.5,5 SAY alltrim("Fecha de la Impresora"+space(11)+":  "+alltrim(cfecha)+"       -      "+alltrim(cHora));
          FONT oFontB;
          COLOR NIL,oDp:nGris



@ 5.5,3 GROUP oGrupo TO 12, 53 PROMPT "Datos Operativos"  FONT oFontB


@ 6,5 SAY "Facturas Fiscales emitidas desde el ultimo Reporte Z       "+space(14)+":  "+cDFAcumZ;
          FONT oFontB;
          COLOR NIL,oDp:nGris

@ 7,5 SAY "Documentos NO Fiscales emitidos desde el último Reporte Z"+space(8)+":  "+alltrim(cDNFAcumZ) FONT oFontB COLOR NIL,oDp:nGris

IF "AF" $ oDp:cImpFiscal

  @ 8,5 SAY "Ultima Factura o Devolución"+space(32)+":  "+cUltFac;
            FONT oFontB;
            COLOR NIL,oDp:nGris

  @ 9,5 SAY "Ultimo Documento No Fiscal"+space(26)+":  "+cUltNoFis;
            FONT oFontB;
            COLOR NIL,oDp:nGris

ENDIF

IF "PF" $ oDp:cImpFiscal

  @ 8,5 SAY  "No. Ultima Factura Emitida    "+space(32)+":  "+cUltFac;
            FONT oFontB;
            COLOR NIL,oDp:nGris

  @ 9,5 SAY  "No. Ultima Nota de Crédito    "+space(32)+":  "+cUltDev;
            FONT oFontB;
            COLOR NIL,oDp:nGris

  @ 10,5 SAY "No. Ultimo Documento No Fiscal"+space(26)+":  "+cUltNoFis;
            FONT oFontB;
            COLOR NIL,oDp:nGris

ENDIF


 @ 9.72,28 BUTTON " Cerrar ";
          SIZE 40,12;
          ACTION oDlg:End()

ACTIVATE DIALOG oDlg CENTERED

RETURN

RETURN NIL

FUNCTION SHOW_ERR()

  ALERT("ERROR No. "+EDO4+" En Impresora Fiscal")
  ALERT(cError)

RETURN NIL


//***********************************
//Funcion que se encarga de enviar y controlar la impresion

FUNCTION ENVIARPF()
 
LOCAL lEnvio,nCarBuff:=0, nreenv:=0, nTime:=0, nVueltas:=1, cCharIn:=" "
LOCAL lTimeOut, nTimeIni, nTimeEnd, nTimeOut, cResp:="",nPosSTX,nPosETX, cData2:=""
  cPaquete:=EJECUTAR("EPSONPF-HEX",cPaquete)  // CALCULA EL BCC Y LO AÑADE A cPaquete
  
  nTimeIni:=seconds()
  lTimeOut:=.F.
  nTimeOut:= 10       // Maximo de Segundos para esperar
 
  lEnvio:=.T.
  cData:=""
  cResp:=left(cPaquete,4)    // en la respuesta deben venir los 1ros 4 caracteres del paquete

  oDp:cDescri:SetText(cComent, .T.)  // Actualiza accion en la ventana

  //oDp:cDescri:SetText(cPaquete, .T.)  // Actualiza accion en la ventana
  
  IF !(IsWorking())
     msginfo("Puerto COM Fuera de Línea","INFORMACION")
     //oPfW:End()
     lSeguir:=.F.
     RETURN .F.
  ENDIF
  lEnvio:= OUTCHR(cPaquete)  // OUTCHR retorna falso cuando transmite (aparentemente)
  SysWait(0.6)

  nCarBuff := InbufSize()
  //* 1ER CICLO ESPERANDO UNA RESPUESTA DE LA IMPRESORA
  WHILE nCarBuff = 0  .AND. !lTimeOut         
    oDp:cDescri:SetText("a. Esperando       "+Transform(Crono(nTimeIni),"99999.99"), .T.)  // Actualiza accion en la ventana
    SysWait(0.1)
    nCarBuff := InbufSize()
    lTimeOut:= IF(Crono(nTimeIni) > nTimeOut,.T.,.F.)
  ENDDO
 
  WHILE  !lTimeOut       // nCarBuff > 0 .AND.
    oDp:cDescri:SetText("b. Leyendo "+Transform(Crono(nTimeIni),"99999.99"), .T.)  // Actualiza accion en la ventana
    cData:=cData + InChr(nCarBuff)
    IF STX $ cData 
      IF ETX $ cData
         cData2:=STRTRAN(cData,DC2)
         cData:=cData2
      ELSE
       oDp:cDescri:SetText("c.Leyendo ETX"+Transform(Crono(nTimeIni),"99999.99"), .T.)  // Actualiza accion en la ventana

        SysWait(0.2)
        nCarBuff := InbufSize()
        lTimeOut:= IF(Crono(nTimeIni) > nTimeOut,.T.,.F.)
        cData:=cData + InChr(nCarBuff)
        cData2:=STRTRAN(cData,DC2)
        cData:=cData2
      ENDIF
      nPosSTX:=AT(STX,cData)
      nPosETX:=AT(ETX,cData)

      cData:=SUBSTR(cData,nPosSTX,nPosETX)
      CLPCOPY(cData)
      EXIT
    ELSE
      IF DC2 $ cData
        STRTRAN(cData,DC2,"")
      ENDIF
    ENDIF
    SysWait(0.6)
    nCarBuff := InbufSize()
    lTimeOut:= IF(Crono(nTimeIni) > nTimeOut,.T.,.F.)
  ENDDO

  IF "ERROR" $ cData
      MSGINFO("ERROR EN RESPUESTA DE LA IMPRESORA: ","INFORMACION")
      IF MSGNOYES("REINTETAR ULTIMO COMANDO ?","TOME UNA DECISION" )
        
      ENDIF  
      UnInt_Port() // Cerrar
      RETURN .F.
    ENDIF
  

  IF lTimeOut      //.and. cResp $ cData
    MSGINFO("EL ULTIMO COMANDO DE LA IMPRESORA NO SE EJECUTO POR UN ERROR POR DEMORA DE RESPUESTA LA IMPRESORA")
    //MSGNOYES("REINTETAR ULTIMO COMANDO ?","TOME UNA DECISION" )
    //??? QUE HACER AQUI ??? PREGUNTAR SI SE DESEA REINTENTAR O CANCELAR
    UnInt_Port() // Cerrar
    // oPfW:End()
    RETURN .F.
  ENDIF

  cTiempo:=STR(Crono(nTimeIni))

RETURN .T.


//*************************************************
// ESTA FUNCION RECIBE UN NUMERO BASADO EN LA FUNCION SECONDS()
// Y RETORNA LA DIFERENCIA EN SEGUNDOS ENTRE ESTE NUMERO Y EL SECONDS() ACTUAL
// USADA PARA CALCULAR TIEMPO

FUNCTION Crono (nInicio)
LOCAL nSegundos, nActual

  nSegundos:=0.0
  nActual:=Seconds()

  IF nActual < nInicio 
      nSegundos:= (86399 - Inicio) + nActual
   ELSE
    nSegundos := nActual - nInicio
  ENDIF

RETURN nSegundos

//**************************************************

//********************************

Function Procesa0()
  Cursorwait()  // Coloca el cursor como reloj de espera
  STX      := CHR(02)  // 0x02 = STX  CARACTER DE INICIO DE DATOS
  ETX      := CHR(03)  // 0x03 = ETX  CARACTER DE FIN DE DATOS
  SEP      := CHR(28)  // 0x1C = ?  
  CNU      := CHR(127) //      = ¦  CAMPO NO UTILIZADO
  SEC      := " "

  cData:=""
  cComando   := CHR(56)  // 0x38 = 8   // Comando IF 
  cCampo1    := CHR(78)  // CHR(78)= N 
  SEC        := CHR(oDp:nEpsonSec)    //  oDp:nEpsonSec 
  cPaquete   := STX + SEC + cComando+SEP+cCampo1+ETX 

  oDp:cDescri:SetText(" Abriendo puerto...", .T.)

  IF !Init_Port( cCom, nBaudeRate , nDatabits , cParity , nStopbit , cBuffer  )
     MSGALERT("No pudo abrir "+cCom,"INFORMACION")
     oDlg:End()
     RETURN .F.
  ENDIF
  
  oDp:cDescri:SetText(" Verificando puerto...", .T.)

  OutBufClr()                  // Limpia el Buffer de Salida
  
  IF !IsWorking()
     MSGINFO("Puerto No Funcional o Desconectado!","INFORMACION")
     UnInt_Port() // Cerrar
     oDlg:End()
     RETURN .F.
  ENDIF

  cPaquete:=EJECUTAR("EPSONPF-HEX",cPaquete)  // CALCULA EL BCC Y LO AÑADE A cPaquete

  xCONT:=0
  ENVIO:=.T.
  oDp:cDescri:SetText("Consultando Impresora...", .T.)
  ENVIO:= OUTCHR(cPaquete)  // OUTCHR retorna falso cuando transmite

  IF !ENVIO
    xINISEC:=SECONDS()
    xTIEMPO:=0
    oDp:cDescri:SetText("        Leyendo Estado...", .T.)
    Cursorwait()
    SysWait(1.2)
    xTIEMPO:=0
    WHILE xTIEMPO < 5 .and. !(ETX $ cData)
      
     nCarBuff:=InbufSize()
     IF nCarBuff > 0
       oDp:cDescri:SetText(" Finalizando...", .T.)
       Cursorwait()
       cData:=cData+InChr(nCarBuff)
       IF ETX $ cData 
         EXIT
       ENDIF
     ENDIF
     SysWait(0.8)
     xTIEMPO++
    ENDDO
    IF xTIEMPO >= 10 .OR. !(ETX $ cData) 
      MSGINFO("ERROR ESPERANDO LECTURA DE LA IMPRESORA, IMPRESION TAL VEZ NO OCURRIO","INFORMACION")
      UnInt_Port() // Cerrar
      oDlg:End()
      RETURN .F.
    ENDIF

  ELSE
    MSGINFO("ERROR ESPERANDO ESCRIBIR A LA IMPRESORA, IMPRESION CANCELADA","INFORMACION")
    UnInt_Port() // Cerrar
    oDlg:End()
    RETURN .F.
  ENDIF
  oDp:cDescri:SetText(" Finalizado. Cerrando Puerto", .T.)
  UnInt_Port() // Cerrar
  SysWait(0.5)
  oDlg:End()

 ANALIZA()
 ANALIZA2()
  IF !("ERROR" $ cData)
     SHOW_EDO()
   ELSE
     SHOW_ERR()
  ENDIF

RETURN .T.
